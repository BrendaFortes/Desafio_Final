import type * as Mocha from "mocha";
import { type StepResult } from "allure-js-commons";
import AllureMochaReporter from "allure-mocha";
import type { CodeceptBddStep, CodeceptError, CodeceptStep } from "./model.js";
interface MetaStep {
    name: string;
    id: string;
}
export declare class AllureCodeceptJsReporter extends AllureMochaReporter {
    protected currentBddStep?: string;
    protected metaStepStack: MetaStep[];
    constructor(runner: Mocha.Runner, opts: Mocha.MochaOptions, isInWorker: boolean);
    registerEvents(): void;
    testStarted(test: {
        tags?: string[];
    }): void;
    testFailed(_: {}, error: Error): void;
    testFinished(): void;
    stepStarted(step: CodeceptStep): void;
    bddStepStarted(step: CodeceptBddStep): void;
    stepFailed(_: CodeceptJS.Step, error?: CodeceptError): void;
    stepComment(): void;
    stepPassed(): void;
    stopCurrentStep(updateFunc: (result: StepResult) => void): void;
    stopStepById(currentStep: string | undefined, updateFunc: (result: StepResult) => void): void;
    protected getFrameworkName: () => string;
    protected getWorkerId: () => undefined;
}
export {};
