{"version":3,"file":"reporter.js","names":["event","recorder","env","LabelName","Stage","Status","getMessageAndTraceFromError","getStatusFromError","isMetadataTag","stripAnsi","AllureMochaReporter","MAX_META_STEP_NESTING","AllureCodeceptJsReporter","constructor","runner","opts","isInWorker","_defineProperty","undefined","registerEvents","dispatcher","on","test","before","testStarted","bind","failed","testFailed","finished","testFinished","step","started","stepStarted","passed","stepPassed","stepFailed","comment","stepComment","bddStep","bddStepStarted","after","currentTest","tags","extraTagLabels","filter","tag","map","startsWith","substring","trim","length","name","TAG","value","runtime","updateTest","tr","labels","push","_","error","status","message","statusDetails","currentBddStep","stopCurrentStep","result","stage","FINISHED","BROKEN","_objectSpread","id","metaStepStack","updateStep","stopStep","PASSED","_this$currentHook","root","currentHook","stepPath","current","metaStep","isBDD","_current$toString","toString","index","Math","min","i","startStep","_this$currentHook2","keyword","text","TRY_TO","FAILED","updateFunc","_this$currentHook3","currentStep","stopStepById","promise","catch","err","inspect","Error","Promise","reject"],"sources":["../../src/reporter.ts"],"sourcesContent":["import { event, recorder } from \"codeceptjs\";\nimport type * as Mocha from \"mocha\";\nimport { env } from \"node:process\";\nimport { LabelName, Stage, Status, type StepResult } from \"allure-js-commons\";\nimport { getMessageAndTraceFromError, getStatusFromError, isMetadataTag, stripAnsi } from \"allure-js-commons/sdk\";\nimport AllureMochaReporter from \"allure-mocha\";\nimport type { CodeceptBddStep, CodeceptError, CodeceptStep } from \"./model.js\";\n\ninterface MetaStep {\n  name: string;\n  id: string;\n}\n\nconst MAX_META_STEP_NESTING = 10;\n\nexport class AllureCodeceptJsReporter extends AllureMochaReporter {\n  protected currentBddStep?: string;\n  protected metaStepStack: MetaStep[] = [];\n\n  constructor(runner: Mocha.Runner, opts: Mocha.MochaOptions, isInWorker: boolean) {\n    super(runner, opts, isInWorker);\n    this.registerEvents();\n  }\n\n  registerEvents() {\n    // Test\n    event.dispatcher.on(event.test.before, this.testStarted.bind(this));\n    event.dispatcher.on(event.test.failed, this.testFailed.bind(this));\n    event.dispatcher.on(event.test.finished, this.testFinished.bind(this));\n    // Step\n    event.dispatcher.on(event.step.started, this.stepStarted.bind(this));\n    event.dispatcher.on(event.step.passed, this.stepPassed.bind(this));\n    event.dispatcher.on(event.step.failed, this.stepFailed.bind(this));\n    event.dispatcher.on(event.step.comment, this.stepComment.bind(this));\n\n    event.dispatcher.on(event.bddStep.before, this.bddStepStarted.bind(this));\n    event.dispatcher.on(event.bddStep.after, this.stepPassed.bind(this));\n  }\n\n  testStarted(test: { tags?: string[] }) {\n    if (!this.currentTest) {\n      return;\n    }\n\n    const tags = test.tags || [];\n    const extraTagLabels = tags\n      .filter((tag) => tag && !isMetadataTag(tag))\n      .map((tag) => (tag.startsWith(\"@\") ? tag.substring(1) : tag))\n      .map((tag) => tag.trim())\n      .filter((tag) => tag.length > 0)\n      .map((tag) => ({ name: LabelName.TAG, value: tag }));\n\n    this.runtime.updateTest(this.currentTest, (tr) => {\n      tr.labels.push(...extraTagLabels);\n    });\n  }\n\n  testFailed(_: {}, error: Error) {\n    const status = getStatusFromError({ message: error.message } as Error);\n    const statusDetails = getMessageAndTraceFromError(error);\n    if (this.currentBddStep) {\n      this.stopCurrentStep((result) => {\n        result.stage = Stage.FINISHED;\n        result.status = Status.BROKEN;\n        if (error) {\n          result.status = status;\n          result.statusDetails = { ...statusDetails };\n        }\n      });\n    }\n    this.currentBddStep = undefined;\n\n    for (const { id } of this.metaStepStack) {\n      this.runtime.updateStep(id, (result) => {\n        result.stage = Stage.FINISHED;\n        result.status = Status.BROKEN;\n        if (error) {\n          result.status = status;\n          result.statusDetails = { ...statusDetails };\n        }\n      });\n      this.runtime.stopStep(id);\n    }\n    this.metaStepStack = [];\n  }\n\n  testFinished() {\n    if (this.currentBddStep) {\n      this.runtime.updateStep(this.currentBddStep, (result) => {\n        result.status = Status.PASSED;\n        result.stage = Stage.FINISHED;\n      });\n      this.runtime.stopStep(this.currentBddStep);\n    }\n    this.currentBddStep = undefined;\n\n    for (const { id } of this.metaStepStack) {\n      this.runtime.updateStep(id, (result) => {\n        result.status = Status.PASSED;\n        result.stage = Stage.FINISHED;\n      });\n      this.runtime.stopStep(id);\n    }\n\n    this.metaStepStack = [];\n  }\n\n  stepStarted(step: CodeceptStep) {\n    const root = this.currentHook ?? this.currentTest;\n    if (!root) {\n      return;\n    }\n\n    const stepPath: string[] = [];\n    let current = step.metaStep;\n    while (current && !current.isBDD() && stepPath.length < MAX_META_STEP_NESTING) {\n      stepPath.push(stripAnsi(current.toString() ?? \"\").trim());\n      current = current.metaStep;\n    }\n\n    let index = 0;\n    while (\n      index < Math.min(this.metaStepStack.length, stepPath.length) &&\n      this.metaStepStack[index].name === stepPath[index]\n    ) {\n      index++;\n    }\n\n    for (let i = index; i < this.metaStepStack.length; i++) {\n      const id = this.metaStepStack[i].id;\n      this.runtime.updateStep(id, (result) => {\n        result.status = Status.PASSED;\n        result.stage = Stage.FINISHED;\n      });\n      this.runtime.stopStep(id);\n    }\n\n    for (let i = index; i < stepPath.length; i++) {\n      const name = stepPath[i];\n      const id = this.runtime.startStep(root, undefined, {\n        name,\n      });\n      if (id) {\n        this.metaStepStack.push({ name, id });\n      }\n    }\n\n    this.runtime.startStep(root, undefined, {\n      name: step.toString().trim(),\n    });\n  }\n\n  bddStepStarted(step: CodeceptBddStep) {\n    const root = this.currentHook ?? this.currentTest;\n    if (!root) {\n      return;\n    }\n    this.currentBddStep = this.runtime.startStep(root, undefined, {\n      name: step.keyword + step.text,\n    });\n  }\n\n  // according to the docs, codeceptjs supposed to report the error,\n  // but actually it's never reported\n  stepFailed(_: CodeceptJS.Step, error?: CodeceptError) {\n    this.stopCurrentStep((result) => {\n      result.stage = Stage.FINISHED;\n      if (error) {\n        result.status = getStatusFromError({ message: error.message } as Error);\n        result.statusDetails = getMessageAndTraceFromError(error);\n      } else {\n        result.status = env.TRY_TO === \"true\" ? Status.BROKEN : Status.FAILED;\n      }\n    });\n  }\n\n  stepComment() {\n    this.stopCurrentStep((result) => {\n      result.status = Status.PASSED;\n      result.stage = Stage.FINISHED;\n    });\n  }\n\n  stepPassed() {\n    this.stopCurrentStep((result) => {\n      result.status = Status.PASSED;\n      result.stage = Stage.FINISHED;\n    });\n  }\n\n  stopCurrentStep(updateFunc: (result: StepResult) => void) {\n    const root = this.currentHook ?? this.currentTest;\n    const currentStep = root ? this.runtime.currentStep(root) : undefined;\n\n    this.stopStepById(currentStep, updateFunc);\n  }\n\n  stopStepById(currentStep: string | undefined, updateFunc: (result: StepResult) => void) {\n    if (!currentStep) {\n      return;\n    }\n    const promise = recorder.promise();\n    // @ts-ignore\n    if (promise) {\n      promise.catch((err) => {\n        if (!err.message && typeof err.inspect === \"function\") {\n          // AssertionFailedError doesn't set message attribute\n          err.message = err.inspect();\n        }\n        if (err instanceof Error || err.constructor.name === \"Error\") {\n          this.runtime.updateStep(currentStep, (step) => {\n            step.status = getStatusFromError(err as Error);\n            step.statusDetails = { ...step.statusDetails, ...getMessageAndTraceFromError(err as Error) };\n          });\n        }\n        return Promise.reject(err);\n      });\n    }\n\n    this.runtime.updateStep(currentStep, updateFunc);\n    this.runtime.stopStep(currentStep);\n  }\n\n  protected getFrameworkName = () => \"codeceptjs\";\n\n  protected getWorkerId = () => undefined;\n}\n"],"mappings":"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","ignoreList":[]}