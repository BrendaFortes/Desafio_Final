{"version":3,"file":"reporter.js","names":["_codeceptjs","require","_nodeProcess","_allureJsCommons","_sdk","_allureMocha","_interopRequireDefault","e","__esModule","default","ownKeys","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","MAX_META_STEP_NESTING","AllureCodeceptJsReporter","AllureMochaReporter","constructor","runner","opts","isInWorker","undefined","registerEvents","event","dispatcher","on","test","before","testStarted","bind","failed","testFailed","finished","testFinished","step","started","stepStarted","passed","stepPassed","stepFailed","comment","stepComment","bddStep","bddStepStarted","after","currentTest","tags","extraTagLabels","tag","isMetadataTag","map","startsWith","substring","trim","name","LabelName","TAG","runtime","updateTest","tr","labels","_","error","status","getStatusFromError","message","statusDetails","getMessageAndTraceFromError","currentBddStep","stopCurrentStep","result","stage","Stage","FINISHED","Status","BROKEN","id","metaStepStack","updateStep","stopStep","PASSED","_this$currentHook","root","currentHook","stepPath","current","metaStep","isBDD","_current$toString","stripAnsi","toString","index","Math","min","startStep","_this$currentHook2","keyword","text","env","TRY_TO","FAILED","updateFunc","_this$currentHook3","currentStep","stopStepById","promise","recorder","catch","err","inspect","Error","Promise","reject","exports"],"sources":["../../src/reporter.ts"],"sourcesContent":["import { event, recorder } from \"codeceptjs\";\nimport type * as Mocha from \"mocha\";\nimport { env } from \"node:process\";\nimport { LabelName, Stage, Status, type StepResult } from \"allure-js-commons\";\nimport { getMessageAndTraceFromError, getStatusFromError, isMetadataTag, stripAnsi } from \"allure-js-commons/sdk\";\nimport AllureMochaReporter from \"allure-mocha\";\nimport type { CodeceptBddStep, CodeceptError, CodeceptStep } from \"./model.js\";\n\ninterface MetaStep {\n  name: string;\n  id: string;\n}\n\nconst MAX_META_STEP_NESTING = 10;\n\nexport class AllureCodeceptJsReporter extends AllureMochaReporter {\n  protected currentBddStep?: string;\n  protected metaStepStack: MetaStep[] = [];\n\n  constructor(runner: Mocha.Runner, opts: Mocha.MochaOptions, isInWorker: boolean) {\n    super(runner, opts, isInWorker);\n    this.registerEvents();\n  }\n\n  registerEvents() {\n    // Test\n    event.dispatcher.on(event.test.before, this.testStarted.bind(this));\n    event.dispatcher.on(event.test.failed, this.testFailed.bind(this));\n    event.dispatcher.on(event.test.finished, this.testFinished.bind(this));\n    // Step\n    event.dispatcher.on(event.step.started, this.stepStarted.bind(this));\n    event.dispatcher.on(event.step.passed, this.stepPassed.bind(this));\n    event.dispatcher.on(event.step.failed, this.stepFailed.bind(this));\n    event.dispatcher.on(event.step.comment, this.stepComment.bind(this));\n\n    event.dispatcher.on(event.bddStep.before, this.bddStepStarted.bind(this));\n    event.dispatcher.on(event.bddStep.after, this.stepPassed.bind(this));\n  }\n\n  testStarted(test: { tags?: string[] }) {\n    if (!this.currentTest) {\n      return;\n    }\n\n    const tags = test.tags || [];\n    const extraTagLabels = tags\n      .filter((tag) => tag && !isMetadataTag(tag))\n      .map((tag) => (tag.startsWith(\"@\") ? tag.substring(1) : tag))\n      .map((tag) => tag.trim())\n      .filter((tag) => tag.length > 0)\n      .map((tag) => ({ name: LabelName.TAG, value: tag }));\n\n    this.runtime.updateTest(this.currentTest, (tr) => {\n      tr.labels.push(...extraTagLabels);\n    });\n  }\n\n  testFailed(_: {}, error: Error) {\n    const status = getStatusFromError({ message: error.message } as Error);\n    const statusDetails = getMessageAndTraceFromError(error);\n    if (this.currentBddStep) {\n      this.stopCurrentStep((result) => {\n        result.stage = Stage.FINISHED;\n        result.status = Status.BROKEN;\n        if (error) {\n          result.status = status;\n          result.statusDetails = { ...statusDetails };\n        }\n      });\n    }\n    this.currentBddStep = undefined;\n\n    for (const { id } of this.metaStepStack) {\n      this.runtime.updateStep(id, (result) => {\n        result.stage = Stage.FINISHED;\n        result.status = Status.BROKEN;\n        if (error) {\n          result.status = status;\n          result.statusDetails = { ...statusDetails };\n        }\n      });\n      this.runtime.stopStep(id);\n    }\n    this.metaStepStack = [];\n  }\n\n  testFinished() {\n    if (this.currentBddStep) {\n      this.runtime.updateStep(this.currentBddStep, (result) => {\n        result.status = Status.PASSED;\n        result.stage = Stage.FINISHED;\n      });\n      this.runtime.stopStep(this.currentBddStep);\n    }\n    this.currentBddStep = undefined;\n\n    for (const { id } of this.metaStepStack) {\n      this.runtime.updateStep(id, (result) => {\n        result.status = Status.PASSED;\n        result.stage = Stage.FINISHED;\n      });\n      this.runtime.stopStep(id);\n    }\n\n    this.metaStepStack = [];\n  }\n\n  stepStarted(step: CodeceptStep) {\n    const root = this.currentHook ?? this.currentTest;\n    if (!root) {\n      return;\n    }\n\n    const stepPath: string[] = [];\n    let current = step.metaStep;\n    while (current && !current.isBDD() && stepPath.length < MAX_META_STEP_NESTING) {\n      stepPath.push(stripAnsi(current.toString() ?? \"\").trim());\n      current = current.metaStep;\n    }\n\n    let index = 0;\n    while (\n      index < Math.min(this.metaStepStack.length, stepPath.length) &&\n      this.metaStepStack[index].name === stepPath[index]\n    ) {\n      index++;\n    }\n\n    for (let i = index; i < this.metaStepStack.length; i++) {\n      const id = this.metaStepStack[i].id;\n      this.runtime.updateStep(id, (result) => {\n        result.status = Status.PASSED;\n        result.stage = Stage.FINISHED;\n      });\n      this.runtime.stopStep(id);\n    }\n\n    for (let i = index; i < stepPath.length; i++) {\n      const name = stepPath[i];\n      const id = this.runtime.startStep(root, undefined, {\n        name,\n      });\n      if (id) {\n        this.metaStepStack.push({ name, id });\n      }\n    }\n\n    this.runtime.startStep(root, undefined, {\n      name: step.toString().trim(),\n    });\n  }\n\n  bddStepStarted(step: CodeceptBddStep) {\n    const root = this.currentHook ?? this.currentTest;\n    if (!root) {\n      return;\n    }\n    this.currentBddStep = this.runtime.startStep(root, undefined, {\n      name: step.keyword + step.text,\n    });\n  }\n\n  // according to the docs, codeceptjs supposed to report the error,\n  // but actually it's never reported\n  stepFailed(_: CodeceptJS.Step, error?: CodeceptError) {\n    this.stopCurrentStep((result) => {\n      result.stage = Stage.FINISHED;\n      if (error) {\n        result.status = getStatusFromError({ message: error.message } as Error);\n        result.statusDetails = getMessageAndTraceFromError(error);\n      } else {\n        result.status = env.TRY_TO === \"true\" ? Status.BROKEN : Status.FAILED;\n      }\n    });\n  }\n\n  stepComment() {\n    this.stopCurrentStep((result) => {\n      result.status = Status.PASSED;\n      result.stage = Stage.FINISHED;\n    });\n  }\n\n  stepPassed() {\n    this.stopCurrentStep((result) => {\n      result.status = Status.PASSED;\n      result.stage = Stage.FINISHED;\n    });\n  }\n\n  stopCurrentStep(updateFunc: (result: StepResult) => void) {\n    const root = this.currentHook ?? this.currentTest;\n    const currentStep = root ? this.runtime.currentStep(root) : undefined;\n\n    this.stopStepById(currentStep, updateFunc);\n  }\n\n  stopStepById(currentStep: string | undefined, updateFunc: (result: StepResult) => void) {\n    if (!currentStep) {\n      return;\n    }\n    const promise = recorder.promise();\n    // @ts-ignore\n    if (promise) {\n      promise.catch((err) => {\n        if (!err.message && typeof err.inspect === \"function\") {\n          // AssertionFailedError doesn't set message attribute\n          err.message = err.inspect();\n        }\n        if (err instanceof Error || err.constructor.name === \"Error\") {\n          this.runtime.updateStep(currentStep, (step) => {\n            step.status = getStatusFromError(err as Error);\n            step.statusDetails = { ...step.statusDetails, ...getMessageAndTraceFromError(err as Error) };\n          });\n        }\n        return Promise.reject(err);\n      });\n    }\n\n    this.runtime.updateStep(currentStep, updateFunc);\n    this.runtime.stopStep(currentStep);\n  }\n\n  protected getFrameworkName = () => \"codeceptjs\";\n\n  protected getWorkerId = () => undefined;\n}\n"],"mappings":"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","ignoreList":[]}